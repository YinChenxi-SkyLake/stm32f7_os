/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1_VIEW_BASE_HPP
#define SCREEN1_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/TextArea.hpp>

#include <touchgfx/mixins/ClickListener.hpp>
class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void buttonDownClicked()
    {
        // Override and implement this function in Screen1View
    }

    virtual void buttonUpClicked()
    {
        // Override and implement this function in Screen1View
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image Image1;
    touchgfx::ButtonWithLabel buttonUp;
    touchgfx::ButtonWithLabel buttonDown;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textShowValue;
    touchgfx::ButtonWithIcon buttonGotoScreen2;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::TextArea textShowAll;

    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textAreaEdit;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTSHOWVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textShowValueBuffer[TEXTSHOWVALUE_SIZE];
    static const uint16_t TEXTAREAEDIT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaEditBuffer[TEXTAREAEDIT_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // SCREEN1_VIEW_BASE_HPP
