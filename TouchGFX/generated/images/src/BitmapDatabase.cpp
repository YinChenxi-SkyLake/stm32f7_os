// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0xef6645d9
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _bk2[];
extern const unsigned char _blue_buttons_round_edge_icon_button[];
extern const unsigned char _blue_buttons_round_edge_icon_button_pressed[];
extern const unsigned char _blue_buttons_round_icon_button[];
extern const unsigned char _blue_buttons_round_icon_button_pressed[];
extern const unsigned char _blue_icons_back_arrow_32[];
extern const unsigned char _blue_icons_next_arrow_32[];
extern const unsigned char _cancel[];
extern const unsigned char _cancel_pressed[];
extern const unsigned char _image00[];
extern const unsigned char _key[];
extern const unsigned char _key_back[];
extern const unsigned char _key_back_pressed[];
extern const unsigned char _key_enter[];
extern const unsigned char _key_enter_pressed[];
extern const unsigned char _key_panel[];
extern const unsigned char _key_press[];
extern const unsigned char _mn[];
extern const unsigned char _modal_background[];
extern const unsigned char _ok[];
extern const unsigned char _ok_pressed[];
extern const unsigned char _slider_background_vertical[];
extern const unsigned char _slider_background_vertical_filled[];
extern const unsigned char _slider_knob_shape[];
extern const unsigned char _speedCtrl[];
extern const unsigned char _speedCtrlPressed[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _bk2, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB565 },
    { _blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_back_arrow_32, 0, 17, 30, 3, 11, 4, 8, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_next_arrow_32, 0, 17, 30, 10, 11, 4, 8, touchgfx::Bitmap::ARGB8888 },
    { _cancel, 0, 111, 57, 0, 0, 111, 57, touchgfx::Bitmap::RGB565 },
    { _cancel_pressed, 0, 111, 57, 0, 0, 111, 57, touchgfx::Bitmap::RGB565 },
    { _image00, 0, 194, 194, 72, 16, 50, 125, touchgfx::Bitmap::ARGB8888 },
    { _key, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _key_back, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _key_back_pressed, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _key_enter, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _key_enter_pressed, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _key_panel, 0, 481, 250, 0, 0, 481, 250, touchgfx::Bitmap::RGB565 },
    { _key_press, 0, 40, 40, 0, 0, 40, 40, touchgfx::Bitmap::RGB565 },
    { _mn, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB565 },
    { _modal_background, 0, 280, 180, 0, 0, 280, 180, touchgfx::Bitmap::RGB565 },
    { _ok, 0, 112, 58, 0, 0, 112, 58, touchgfx::Bitmap::RGB565 },
    { _ok_pressed, 0, 112, 58, 0, 0, 112, 58, touchgfx::Bitmap::RGB565 },
    { _slider_background_vertical, 0, 6, 166, 0, 3, 6, 160, touchgfx::Bitmap::ARGB8888 },
    { _slider_background_vertical_filled, 0, 6, 166, 0, 2, 6, 162, touchgfx::Bitmap::ARGB8888 },
    { _slider_knob_shape, 0, 35, 35, 10, 7, 15, 14, touchgfx::Bitmap::ARGB8888 },
    { _speedCtrl, 0, 80, 80, 19, 19, 42, 42, touchgfx::Bitmap::ARGB8888 },
    { _speedCtrlPressed, 0, 80, 80, 19, 19, 42, 42, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

